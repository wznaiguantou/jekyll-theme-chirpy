## HTTP 学习（一）

## 1. HTTP的基本概念

### 1. 1 什么是HTTP

**超文本传输协议**（Hyper Text Transfer protocol）

在此，我们可以对其进行拆分，从3个角度来看。

- 超文本：即超越了普通文本的文本。例如文字、图片、视频，链接等，都可以算作是超文本。
- 传输：即某个数据从A点搬运到B点，或者从B点搬运到A点的一个行为。
- 协议： 即计算机之间(参与者至少2个)，

**HTTP** 是一个在计算机世界里专门在「两点」之间「传输」文字、图片、音频、视频等「超文本」数据 的「约定和规范」。



### 1.2 常见的状态码

// TODO 待补充



## 2. HTTP 常见字段有哪些？

//TODO 待补充

| 字段           | 描述 | 示例 |
| :------------- | :--- | ---- |
| Host           |      |      |
| Content-Length |      |      |
| Connection     |      |      |
| Content-Type   |      |      |
|                |      |      |
|                |      |      |
|                |      |      |
|                |      |      |
|                |      |      |
|                |      |      |
|                |      |      |
|                |      |      |
|                |      |      |
|                |      |      |
|                |      |      |
|                |      |      |
|                |      |      |



## 3.  HTTP的特性

### 3.1 优点

- 简单

  基本的报文格式 header + body, 其中header 也是 key-value 的简单文本形式，易于理解，降低学习门槛和使用门槛

- 易扩展

  HTTP协议里的各类请求方法、URI/URL、状态码、头字段等每个组成要求都没有被固定死，都允许开 发人员自定义和扩充。

  同时 HTTP 由于是工作在应用层( OSI 第七层)，则它下层可以随意变化。

  HTTPS 也就是在 HTTP 与 TCP 层之间增加了 SSL/TLS 安全传输层，HTTP/3 甚至把 TCP 层换成了基

  于 UDP 的 QUIC。

- 应用广泛和跨平台

  没有平台的限制，支持在app、服务器、浏览器等多场景下进行使用。

### 3.2 缺点

- 明文传输,不安全

  明文传输，可通过抓包工具和浏览器调试器就能看到请求数据

- 无状态

  不维护状态信息，对有关联性操作的场景无法支持，比如用户登录



## 4. HTTP/1.1 性能

### 4.1 长链接

HTTP/1.0中，所有的请求都是基于短连的且是串行的。即单个请求都需要经历三次握手四次挥手的过程。这样就产生了很多次无谓的TCP建立、断开连接的开销。

在1.1上为了解决该问题，HTTP/1.1 提出了长链接的通信方式，以此来减少上述无谓的通信开销。

那么在任意一方没有主动提出断开的前提下，则会保持TCP的连接状态。

```text
思考：那是否会永久保持连接状态呢？这样是否会长期占用系统资源？
```

### 4.1  管道网络传输

在同一个TCP连接里，可以连续发送请求而不必等待响应返回，使得整体的响应时间缩短。但是仍然会有一个问题，【队头阻塞】

### 4.2  队头阻塞

即服务器仍然是串行的响应处理请求，那如果其中有一个请求被阻塞了，则其他请求就会无法完成响应导致拥塞。

























## X. Questions

1. 浏览器的参数信息都是明文的，是否需要加密，怎么加密？

